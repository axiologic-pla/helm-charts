name: Release Charts

on:
  create:
    tags:
      - '*' # Pattern to match all tags
  workflow_dispatch:  # Keep manual option

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 
        with:
          fetch-depth: 0

      - name: Fetch all Tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* 

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # https://github.com/marketplace/actions/engineerd-configurator
      - uses: engineerd/configurator@479197cb150e720c848c8dfbe12da101471258e3 # v0.0.8
        name: Setup helm
        with:
          name: helm
          url: https://get.helm.sh/helm-v3.7.1-linux-amd64.tar.gz
          pathInArchive: linux-amd64/helm
      - run: helm version

      - name: Process Pre-Existing Tags
        run: |
          for tag in $(git tag -l); do
            # Check if release exists (adapt this logic)
            if ! [[ $(gh release list | grep $tag) ]]; then 
              helm package charts/$tag  # Assuming charts are tagged with dir
              # Use chart-releaser-action to create a release here
              helm/chart-releaser-action@v1.2.1 # Specify version
                with:
                  charts_dir: charts
                  config: cr.yaml # If you have a config file
                env:
                  CR_TOKEN: "${{ secrets.GIT_TOKEN }}"
            fi
          done

      # Keep the original logic for 'on push' behavior if needed
      - name: Run chart-releaser (on push) 
        if: ${{ github.event_name == 'push' }} 
        uses: helm/chart-releaser-action@v1.2.1 
        with:
          charts_dir: charts
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GIT_TOKEN }}" 
